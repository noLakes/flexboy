
//css reset from Fraser Boag

  *, *:before, *:after{
    box-sizing: border-box;
  }

  html, body, div, span, object, iframe, figure, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, code, em, img, small, strike, strong, sub, sup, tt, b, u, i, ol, ul, li, fieldset, form, label, table, caption, tbody, tfoot, thead, tr, th, td, main, canvas, embed, footer, header, nav, section, video{
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    text-size-adjust: none;
  }

  footer, header, nav, section, main{
    display: block;
  }

  body{
    line-height: 1;
  }

  ol, ul{
    list-style: none;
  }

  blockquote, q{
    quotes: none;
  }

  blockquote:before, blockquote:after, q:before, q:after{
    content: '';
    content: none;
  }

  table{
    border-collapse: collapse;
    border-spacing: 0;
  }

  input{
    -webkit-appearance: none;
    border-radius: 0;
  }

// css reset ends

// page width responsive breakpoints
$grid-bp-sm: 576;
$grid-bp-md: 768;
$grid-bp-lg: 992;
$grid-bp-xl: 1200;

// column variable
$grid-cols: 12;

.container {
  max-width: $grid-bp-md * 1px;
  margin: 0 auto;

  &-fluid {
    margin: 0;
    max-width: 100vw;
  }

  &-row {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
  }
}

// creates media queries using the passed breakpoint value and then runs a given block in @content
@mixin create-mq($breakpoint) {
  @if ($breakpoint == 0) {
    @content;
  } @else {
    @media screen and (min-width: $breakpoint * 1px) {
      @content;
    }
  }
}

// creates columns in each breakpoint, uses breakpoin mixin to generate media queries
// also creates column offset classes
@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
  @include create-mq($breakpoint) {
    .col#{$modifier}-offset-0 {
      margin-left: 0;
    }
    @for $i from 1 through $grid-cols {
      .col#{$modifier}-#{$i} {
        flex-basis: (100 / ($grid-cols / $i) ) * 1%;
      }
      .col#{$modifier}-offset-#{$i} {
        margin-left: (100 / ($grid-cols / $i) ) * 1%;
      }
    }
  }
}

// maps breakpoint name to min pixel value
$map-grid-props: ('': 0, '-sm': $grid-bp-sm, '-md': $grid-bp-md, '-lg': $grid-bp-lg, '-xl': $grid-bp-xl);


// this loop is what uses the above map and mixins to actually write all the columns
@each $modifier , $breakpoint in $map-grid-props {
  @include create-col-classes($modifier, $grid-cols, $breakpoint)
}
